name: Release

on:
  workflow_dispatch:
      inputs:
          version:
            description: 'Release version'
            required: true

env:
  JAVA_VERSION: '17'
  JAVA_DISTRO: 'zulu'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    environment: SONAR
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRO }}

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Set Maven Version to release version, commit and push
        id: vars
        shell: bash
        run: |
          VERSION=${{ github.event.inputs.version }}
          mvn -B versions:set versions:commit -DnewVersion=$VERSION
          git config --global user.email "framstag@users.noreply.github.com"
          git config --global user.name "Tim Teulings"
          git commit -a -m "Releasing version $VERSION"
          git push origin main

      - name: Build with maven including JQAssistant scan, analyze and report
        run:  mvn -ntp --batch-mode --update-snapshots verify

      - name: Upload JQAssistant Report
        uses: actions/upload-artifact@v3
        with:
          name: JQAssistant-Report
          path: target/jqassistant/report

      - name: Static code analysis using Sonar
        run:  mvn -ntp -B org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Framstag_acousticrules
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: JReleaser assemble
        if: github.ref == 'refs/heads/main'
        uses: jreleaser/release-action@v2
        with:
          arguments: assemble
        env:
          JRELEASER_PROJECT_VERSION: ${{ needs.precheck.outputs.VERSION }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: JReleaser full-release
        if: github.ref == 'refs/heads/main'
        uses: jreleaser/release-action@v2
        with:
          arguments: full-release
        env:
          JRELEASER_PROJECT_VERSION: ${{ needs.precheck.outputs.VERSION }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: JReleaser upload output
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v3
        with:
          name: jreleaser-release
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties

      - name: Set Maven Version to release version, commit and push
        shell: bash
        run: |
          VERSION=${{ github.event.inputs.version }}
          mvn -B versions:set versions:commit -DnextSnapshot
          git config --global user.email "framstag@users.noreply.github.com"
          git config --global user.name "Tim Teulings"
          git commit -a -m "Setting version to next snapshot version
          git push origin main
