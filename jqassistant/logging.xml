<!--
  ~ AcousticRuler
  ~ Copyright 2023 Tim Teulings
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<jqassistant-rules
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://schema.jqassistant.org/rule/v2.0"
        xsi:schemaLocation="http://schema.jqassistant.org/rule/v2.0 https://schema.jqassistant.org/rule/jqassistant-rule-v2.0.xsd">

    <group id="logging">
        <includeConstraint refId="logging:LoggerArePrivate"/>
        <includeConstraint refId="logging:LoggerAreFinal"/>
        <includeConstraint refId="logging:LoggerAreStatic"/>
        <includeConstraint refId="logging:LoggerHaveNameLog"/>
    </group>

    <constraint id="logging:LoggerArePrivate" severity="blocker">
        <description>Logger instance should be `private`</description>
        <cypher><![CDATA[
MATCH (c:Type)-[:DECLARES]->(f:Field)-[:OF_TYPE]->(t:Type{fqn:'org.slf4j.Logger'})
WHERE f.visibility <> 'private'
RETURN c,f
    ]]></cypher>
    </constraint>

    <constraint id="logging:LoggerAreFinal" severity="blocker">
        <description>Logger instance should be `final`</description>
        <cypher><![CDATA[
MATCH (c:Type)-[:DECLARES]->(f:Field)-[:OF_TYPE]->(t:Type{fqn:'org.slf4j.Logger'})
WHERE NOT f.final
RETURN c,f
    ]]></cypher>
    </constraint>

    <constraint id="logging:LoggerAreStatic" severity="blocker">
        <description>Logger instance should be `static`</description>
        <cypher><![CDATA[
MATCH (c:Type)-[:DECLARES]->(f:Field)-[:OF_TYPE]->(t:Type{fqn:'org.slf4j.Logger'})
WHERE NOT EXISTS(f.static) OR (NOT f.static)
RETURN c,f
    ]]></cypher>
    </constraint>

    <constraint id="logging:LoggerHaveNameLog" severity="blocker">
        <description>Logger instance should be named `log`</description>
        <cypher><![CDATA[
MATCH (f:Field)-[:OF_TYPE]->(t:Type{fqn:'org.slf4j.Logger'})
WHERE NOT f.name = "log"
RETURN f
    ]]></cypher>
    </constraint>
</jqassistant-rules>