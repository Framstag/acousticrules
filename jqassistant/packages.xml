<!--
  ~ AcousticRuler
  ~ Copyright 2023 Tim Teulings
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<jqassistant-rules
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://schema.jqassistant.org/rule/v2.0"
        xsi:schemaLocation="http://schema.jqassistant.org/rule/v2.0 https://schema.jqassistant.org/rule/jqassistant-rule-v2.0.xsd">

    <group id="packages">
        <includeConcept refId="packages:PackageStructure"/>
        <includeConcept refId="packages:PackageDocumentation"/>
        <includeConcept refId="packages:Module"/>
        <includeConcept refId="packages:ModuleDependencies"/>
    </group>

    <concept id="packages:PackageStructure">
        <description>Hierarchy of Packages</description>
        <cypher><![CDATA[
MATCH
  (artifact:Main:Artifact)-[:CONTAINS]->(package:Package)
OPTIONAL MATCH
  (package)-[contains:CONTAINS]->(:Package)
RETURN
  {
    role : "graph",
    parent : artifact,
    nodes : collect(package),
    relationships: collect(contains)
  }
    ]]></cypher>
        <report type="plantuml-component-diagram"/>
    </concept>

    <concept id="packages:PackageDocumentation">
        <requiresConcept refId="description:PackageDescription"/>
        <description>List of Packages and their Description</description>
        <cypher><![CDATA[
MATCH
  (artifact:Main:Artifact)-[:CONTAINS]->(package:Package)
OPTIONAL MATCH
  (package)-[contains:CONTAINS]->(:Package)
RETURN
  DISTINCT package.fqn AS Package, package.description AS Description
ORDER BY
  package.fqn
    ]]></cypher>
    </concept>

    <concept id="packages:Module">
        <description>All packages in the root package of the main artifact are labeled as `Module`.</description>
        <cypher><![CDATA[
MATCH
  (:Main:Artifact)-[:CONTAINS]->(root:Package)-[:CONTAINS]->(module:Package)
WHERE
  root.fqn = "com.framstag.acousticrules"
SET
  module:Module
RETURN
  module.name as Module, module.fqn as Package
ORDER BY
  module.name
    ]]></cypher>
    </concept>

    <concept id="packages:ModuleDependencies">
        <requiresConcept refId="packages:Module"/>
        <description>Dependencies between modules</description>
        <cypher><![CDATA[
MATCH
  (module1:Module)-[:CONTAINS*]->(t1:Type),
  (module2:Module)-[:CONTAINS*]->(t2:Type),
  (t1)-[:DEPENDS_ON]->(t2)
WHERE
  module1 <> module2
  AND module1.fqn <> "com.framstag.acousticrules.annotation"
  AND module2.fqn <> "com.framstag.acousticrules.annotation"
  AND module1.fqn <> "com.framstag.acousticrules.exception"
  AND module2.fqn <> "com.framstag.acousticrules.exception"

WITH
  module1, module2, COUNT(*) AS weight
MERGE
  (module1)-[dependsOn:DEPENDS_ON_MODULE]->(module2)
SET
  dependsOn.weight = weight
RETURN
  module1, dependsOn, module2
    ]]></cypher>
        <report type="plantuml-component-diagram"/>
    </concept>
</jqassistant-rules>